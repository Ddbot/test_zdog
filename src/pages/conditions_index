    if (index >= 0 && index <= 4) {
      switch (e.target.parentNode.id) {
        case "chevron_bottom":
          // 1. Animer la sortie des chevrons
          chevronsExit();
          // 2. Animer le fadeout de slide text
          fadeOutText(down);
          // 3. Changer l'index pour faire changer le contenu de slide text
          setIndex((prevIndex, props) => {
            return prevIndex + 1
          });
          // 4. Animer le fade in de slide text
          fadeInText(down);
          // 5. Animer l'entree des chevrons
          chevronsEntry();
      
          console.log("Fini d'animer le chevron du bas", index);
          
          setConeRotation((prevRot, props) => {
            console.log('Dans setConeRotation BOTTOM: ', prevRot, 'Index: ', index );
            return cone_seq[index];
          });                    

//____________
            // chevronsExit();
            // fadeInText(down);
            // chevronsExit();
            // fadeOutText(down);
            // setIndex((prevIndex, props) => {
            //   return prevIndex + 1
            // });
            // setConeRotation(cone_seq[index]);
            // fadeInText(down);
            // chevronsEntry();
            // setConeRotation((prevRot, props) => {
            //   console.log('Dans setConeRotation BOTTOM: ', prevRot, 'Index: ', index);
            //   return cone_seq[index]
            // });
//___________
        break;
        
        case "chevron_top":
          // 1. Animer la sortie des chevrons
          chevronsExit();
          // 2. Animer le fadeout de slide text
          fadeOutText(up);
          // 3. Changer l'index pour faire changer le contenu de slide text
          setIndex((prevIndex, props) => {
            return prevIndex - 1;
          });
      
          // 4. Animer le fade in de slide text
          fadeInText(up);
          // 5. Animer l'entree des chevrons
          chevronsEntry();    

          console.log('AnimÃ© le chevron du haut', index, cone_seq[index]);
          
          setConeRotation((prevRot, props) => {          
            return cone_seq[index];
            });
      
            console.log('Now rotation is :', coneRotation, ' and index is ', index);
          break;
          default:
          break;
        }
      } else {
      setIndex((prevIndex, props) => {
        return 0;
      });      
    }